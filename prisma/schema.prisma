// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Areas {
  id         Int      @id @default(autoincrement())
  area_name  String
  created_at DateTime @default(now())

  Riscos Riscos[]
  @@map("areas")
}

model AvaliacaoControle {
  id                 Int      @id @default(autoincrement())
  rating_control_int Float
  description        String
  created_at         DateTime @default(now())

  Riscos Riscos[]
  @@map("avaliacao_controle")
}

model Categorias {
  id            Int      @id @default(autoincrement())
  category_name String
  created_at    DateTime @default(now())

  Riscos Riscos[]
  @@map("categorias")
}

model Classificacoes {
  id                  Int      @id @default(autoincrement())
  classification_name String
  created_at          DateTime @default(now())

  Riscos Riscos[]
  @@map("classificacoes")
}

model Impactos {
  id          Int      @id @default(autoincrement())
  impact_int  Float
  description String
  created_at  DateTime @default(now())

  Riscos Riscos[]
  @@map("impactos")
}

model OrigemRisco {
  id               Int      @id @default(autoincrement())
  risk_origin_name String
  created_at       DateTime @default(now())

  Riscos Riscos[]
  @@map("origem_risco")
}

model Periodos {
  id          Int      @id @default(autoincrement())
  period_name String
  created_at  DateTime @default(now())

  Riscos Riscos[]
  @@map("periodos")
}

model Probabilidades {
  id              Int      @id @default(autoincrement())
  probability_int Float
  description     String
  created_at      DateTime @default(now())

  Riscos Riscos[]
  @@map("probabilidades")
}

model Profiles {
  id           String   @id @default(uuid())
  profile_name String
  description  String
  is_admin     Boolean  @default(false)
  created_at   DateTime @default(now())

  Users Users[]
  @@map("profiles")
}

model Riscos {
  id                 String            @id @default(uuid())
  id_area            Int
  area               Areas             @relation(fields: [id_area], references: [id])
  id_user            String
  user               Users             @relation(fields: [id_user], references: [id])
  id_types_origin    Int
  types_origin       TiposOrigem       @relation(fields: [id_types_origin], references: [id])
  id_risk_origin     Int
  risk_origin        OrigemRisco       @relation(fields: [id_risk_origin], references: [id])
  indication_origin  String
  id_period          Int
  period             Periodos          @relation(fields: [id_period], references: [id])
  event_risk         String
  cause_risk         String
  consequence_risk   String
  id_category        Int
  category           Categorias        @relation(fields: [id_category], references: [id])
  existing_controls  String
  id_probability     Int
  probability        Probabilidades    @relation(fields: [id_probability], references: [id])
  id_impact          Int
  impact             Impactos          @relation(fields: [id_impact], references: [id])
  inherent_risk      String
  id_rating_control  Int
  rating_control     AvaliacaoControle @relation(fields: [id_rating_control], references: [id])
  residual_risk      String
  // id_classification  Int
  // classification     Classificacoes    @relation(fields: [id_classification], references: [id])
  priority           Boolean           @default(false)
  justification      String
  id_types_treatment Int
  types_treatment    TiposTratamento   @relation(fields: [id_types_treatment], references: [id])
  treatment_measures String
  deadline           String
  id_status          Int
  status             Status            @relation(fields: [id_status], references: [id])
  comments           String
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  Classificacoes   Classificacoes? @relation(fields: [classificacoesId], references: [id])
  classificacoesId Int?
  @@map("riscos")
}

model Status {
  id          Int      @id @default(autoincrement())
  status_name String
  created_at  DateTime @default(now())

  Riscos Riscos[]
  @@map("status")
}

model TiposOrigem {
  id                Int      @id @default(autoincrement())
  types_origin_name String
  created_at        DateTime @default(now())

  Riscos Riscos[]
  @@map("tipos_origem")
}

model TiposTratamento {
  id                   Int      @id @default(autoincrement())
  types_treatment_name String
  created_at           DateTime @default(now())

  Riscos Riscos[]
  @@map("tipos_tratamento")
}

model Users {
  id         String    @id @default(uuid())
  user_name  String    @unique
  user_email String
  password   String
  id_profile String?
  profile    Profiles? @relation(fields: [id_profile], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt


  Riscos Riscos[]
  @@unique([id, id_profile], name: "link_users_profile")
  @@map("users")
}
